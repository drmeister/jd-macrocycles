GROMACS:    mdrun_mpi, VERSION 5.0.4

GROMACS is written by:
Emile Apol         Rossen Apostolov   Herman J.C. Berendsen Par Bjelkmar       
Aldert van Buuren  Rudi van Drunen    Anton Feenstra     Sebastian Fritsch  
Gerrit Groenhof    Christoph Junghans Peter Kasson       Carsten Kutzner    
Per Larsson        Justin A. Lemkul   Magnus Lundborg    Pieter Meulenhoff  
Erik Marklund      Teemu Murtola      Szilard Pall       Sander Pronk       
Roland Schulz      Alexey Shvetsov    Michael Shirts     Alfons Sijbers     
Peter Tieleman     Christian Wennberg Maarten Wolf       
and the project leaders:
Mark Abraham, Berk Hess, Erik Lindahl, and David van der Spoel

Copyright (c) 1991-2000, University of Groningen, The Netherlands.
Copyright (c) 2001-2014, The GROMACS development team at
Uppsala University, Stockholm University and
the Royal Institute of Technology, Sweden.
check out http://www.gromacs.org for more information.

GROMACS is free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License
as published by the Free Software Foundation; either version 2.1
of the License, or (at your option) any later version.

GROMACS:      mdrun_mpi, VERSION 5.0.4
Executable:   /home/tue91994/Programs/gromacs-5.0.4-installed/bin/mdrun_mpi
Library dir:  /home/tue91994/Programs/gromacs-5.0.4-installed/share/gromacs/top
Command line:
  mdrun_mpi -s prod6.tpr


Back Off! I just backed up md.log to ./#md.log.7#

Number of hardware threads detected (12) does not match the number reported by OpenMP (1).
Consider setting the launch configuration manually!
Reading file prod6.tpr, VERSION 5.0.4 (single precision)
Changing nstlist from 10 to 20, rlist from 0.9 to 0.932

The number of OpenMP threads was set by environment variable OMP_NUM_THREADS to 1
Using 12 MPI processes
Using 1 OpenMP thread per MPI process
Compiled SIMD instructions: SSE2 (Gromacs could use SSE4.1 on this machine, which is better)

Non-default thread affinity set probably by the OpenMP library,
disabling internal thread affinity

Back Off! I just backed up traj.trr to ./#traj.trr.7#

Back Off! I just backed up traj_comp.xtc to ./#traj_comp.xtc.7#

Back Off! I just backed up ener.edr to ./#ener.edr.7#
starting mdrun 'G182 in water'
100000000 steps, 200000.0 ps (continuing from step 85000000, 170000.0 ps).

NOTE: Turning on dynamic load balancing


Writing final coordinates.

Back Off! I just backed up confout.gro to ./#confout.gro.6#

 Average load imbalance: 1.9 %
 Part of the total run time spent waiting due to load imbalance: 1.1 %
 Steps where the load balancing was limited by -rdd, -rcon and/or -dds: X 0 % Y 0 %


               Core t (s)   Wall t (s)        (%)
       Time:   362043.750    30240.093     1197.2
                         8h24:00
                 (ns/day)    (hour/ns)
Performance:       85.714        0.280

gcq#197: "Cut It Deep and Cut It Wide" (The Walkabouts)

